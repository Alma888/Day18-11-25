# Day18-11-25

1、java的字符类型采用的是Unicode编码方案，每个Unicode码占用（16）个比特位。

2、有如下4条语句：(C)
     Integer i01=59;
     int i02=59;
     Integer i03=Integer.valueOf(59);
     Integer i04=new Integer(59);
   以下输出结果为false的是:
A    System.out.println(i01==i02);
B    System.out.println(i01==i03);
C    System.out.println(i03==i04);
D    System.out.println(i02==i04);

3、static关键字主要有两种作用:
    第一，为某特定数据类型或对象分配单一的存储空间，而与创建对象的个数无关。
    第二，实现某个方法或属性与类而不是对象关联在一起
      具体而言，在Java语言中，static主要有4中使用情况:成员变量、成员方法、代码块和内部类。
   (1) static成员变量:
        Java类提供了两种类型的变量：用static关键字修饰的静态变量和不
    用static关键字修饰的实例变量。静态变量属于类，在内存中只有一个复制，  
    只要静态变量所在的类被加载，这个静态变量就会被分配空间，因此就可以
    被使用了。对静态变量的引用有两种方式，分别是"类.静态变量"和"对象.静
    态变量"。实例变量属于对，只有对象被创建后,实例变量才会被分配内存空
    间，才能被使用，它在内存中存在多个复制，只有用"对象.实例变
    量”的方式来引用。
  (2) static成员方法:
       Java中提供了static方法和非static方法。static方法是类的方法，不需要创 
    建对象就可以被调用，而非static方法是对象的方法，只有对象被创建出来后
    才可以被使用，static方法中不能使用this和super关键字，不能调用非
    static方法，只能访问所属类的静态成员变量和成员方法，因为当static方法
    被调用.时，这个类的对象可能还没被创建，即使已经被创建了，也无法确定
    调用哪个对象的方法。同理，static方法也不能访问非static类型的变量。
    
4、关于Java封装的描述：
  （封装的主要作用在于对外隐藏内部实现细节，增强程序的安全性）
  
5、对于一个已经不被任何变量引用的对象，当垃圾回收器准备回收该对象所占用的内存时，将自动调用该对象的哪个方法（finalize）
