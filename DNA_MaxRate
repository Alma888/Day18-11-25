# Day18-11-25
标题：DNA序列 
      一个DNA序列由A/C/G/T四个字母的排列组合组成。G和C的比例（定义为   
   GC-Ratio）是序列中G和C两个字母的总的出现次数除以总的字母数目（也就
   是序列长度）。在基因工程中，这个比例非常重要。因为高的GC-Ratio可能
   是基因的起始点。
      给定一个很长的DNA序列，以及要求的最小子序列长度，研究人员经常会 
   需要在其中找出GC-Ratio最高的子序列。
 【输入描述】：输入一个string型基因序列，和int型子串的长度
 【输出描述】：找出GC比例最高的子串,如果有多个输出第一个的子串
 【示例1】: 输入  AACTGTGCACGACCTGA
                 5
           输出  GCACG
           
 //版本一：
 【解题思路】：本题相当于遍历字符串，以每个下标为开始，进行提取子串。
             然后相当于找最大值一样，依次打擂台。找到最大值的GC比例。
【示例代码】
import java.util.*;
public class Main {
//返回一个字符串的GC比例
public static double GiveRatio(String str) {
double ratio=0;//这里要用double型，如果用int型，2/5的结果为0
double count=0;//用double型，原因同上
for(char ch : str.toCharArray()){
if(ch=='G' || ch=='C')
count++;
}
ratio = count/(double)str.length();
return ratio;
}
public static void main(String[] args) {
Scanner scan=new Scanner(System.in);
String dna=scan.nextLine();
int usedSize=scan.nextInt();
String maxStr="";//记录比例最高的字符串
double maxRatio=0;//记录目前出现的最高比例
//注意：最后一个子串的下标是：i=dna.length()-length;
for(int i=0;i<dna.length()-usedSize+1;i++) {
//这里提取长度为length的有效数据个数。
String str=dna.substring(i, i+usedSize);
if(GiveRatio(str)>maxRatio) {
maxStr=str;
maxRatio=GiveRatio(str);
}
}
System.out.println(maxStr);
}


//版本二：
import java.util.*;
public class Test11{
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        String str=sc.next();
        int len=sc.nextInt();
        int sz=str.length();//字符串总长度
        int[] count=new int[sz-len];
        int max=0;
        for(int i=0;i<sz-len;i++){
            String substr=str.substring(i,i+len);
            for(int j=0;j<len;j++){
                if(substr.charAt(j)=='C'||substr.charAt(j)=='G'){
                    count[i]++;
                }
            }
            if(count[max]<count[i]){
                max=i;
            }
        }
        String res=str.substring(max,max+len);
        System.out.println(res);
    }
}
